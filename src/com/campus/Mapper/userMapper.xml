<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="Mapper.userMapper">
	<select id="count" resultType="int">
    	select count(*) from cp_user
    </select>
    <select id="getUserByName" parameterType="String" resultType="User">
        select * from cp_user where username=#{username}
    </select>
    <select id="getUserById" parameterType="int" resultType="User">
        select * from cp_user where UID=#{UID}
    </select>
    <select id="getAllUser" resultType="User">
        select * from cp_user
    </select>
    <select id="getNewUser" parameterType="Map" resultType="User">
        select * from cp_user where registtime  &gt;= #{start} and registtime &lt;= #{end}
    </select>
    <insert id="addUser" parameterType="User">
        insert cp_user(username, password, email, registtime, lastlogin) values(#{username} , #{password} , #{email} , #{registtime}, #{lastlogin})
    </insert>
    <update id="updateUser" parameterType="User">
        update cp_user set username = #{username} , password = #{password} , email = #{email} , phone = #{phone} , lastlogin = #{lastlogin} where UID = #{UID}
    </update>
    <update id="resetLogin" parameterType="User">
        update cp_user set lastlogin = #{lastlogin}, registtime = #{registtime} where UID = #{UID}
    </update>
    <delete id="deleteUser" parameterType="int">
        delete from cp_user where UID=#{UID}
    </delete>
</mapper>