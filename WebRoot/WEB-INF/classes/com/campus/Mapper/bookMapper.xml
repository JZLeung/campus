<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="Mapper.bookMapper">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
    resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
    User类就是users表所对应的实体类
    -->
    <!-- 
        根据id查询得到一个user对象
     -->
    <select id="count" resultType="int">
    	select count(*) from cp_books
    </select>
    <select id="getBookById" parameterType="int" resultType="Book">
        select * from cp_books where BID=#{BID}
    </select>
    <select id="getBookByCId" parameterType="int" resultType="Book">
        select * from cp_books where CID=#{CID}
    </select>
    <select id="getNewBook" parameterType="Map" resultType="Book">
        select * from cp_books where publishtime  &gt;= #{start} and publishtime &lt;= #{end}
    </select>
    <select id="getBookByUId" parameterType="User" resultType="Book">
        select * from cp_books where UID=#{UID}
    </select>
    <select id="getAllBooks"  resultType="Book">
        select * from cp_books
    </select>
    <select id="getAllBooksByCID" parameterType="int" resultType="Book">
        select * from cp_books where CID = #{CID}
    </select>
    <insert id="addBook" parameterType="Book" useGeneratedKeys="true" keyProperty="BID">
    	<selectKey resultType="int" keyProperty="BID">  
		  SELECT LAST_INSERT_ID()  
		  </selectKey> 
        insert into cp_books(UID,CID,name,publishtime,price,summary,cover,detail) 
        values(#{UID},#{CID},#{name},#{publishtime},#{price},#{summary},#{cover},#{detail})
    </insert>
    <update id="updateBook" parameterType="Book">
        update cp_books set name = #{name},price = #{price},summary = #{summary},cover = #{cover},detail = #{detail}, CID = #{CID} where BID = #{BID}
    </update>
   <!--  <insert id="addUser" parameterType="Book">
        insert into user(name,pass) values(#{name},#{pass})
    </insert>
    <update id="updateUser" parameterType="Book">
        update user set name=#{name},pass=#{pass} where id=#{id}
    </update>
    <delete id="deleteUser" parameterType="int">
        delete from user where id=#{id}
    </delete> -->
</mapper>